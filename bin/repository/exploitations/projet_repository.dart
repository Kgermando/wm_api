import 'package:postgres/postgres.dart';

import '../../models/exploitations/projet_model.dart';

class ProjetRepository {
  final PostgreSQLConnection executor;
  final String tableName;

  ProjetRepository(this.executor, this.tableName);

  Future<List<ProjetModel>> getAllData() async {
    var data = <ProjetModel>{};

    var querySQL = "SELECT * FROM $tableName ORDER BY \"created\" DESC;";
    List<List<dynamic>> results = await executor.query(querySQL);
    for (var row in results) {
      data.add(ProjetModel.fromSQL(row));
    }
    return data.toList();
  }

  Future<void> insertData(ProjetModel data) async {
    await executor.transaction((ctx) async {
      await ctx.execute(
        "INSERT INTO $tableName (id, nom_projet, cout_projet, responsable,"
        "observation, signature, created, is_submit,"
        "approbation_dg, motif_dg, signature_dg, approbation_budget, motif_budget, signature_budget,"
        "approbation_fin, motif_fin, signature_fin, approbation_dd, motif_dd, signature_dd,"
        "ligne_budgetaire, ressource)"
        "VALUES (nextval('projets_id_seq'), @1, @2, @3, @4, @5, @6,"
        "@7, @8, @9, @10, @11, @12, @13, @14, @15, @16, @17, @18, @19, @20, @21)",
        substitutionValues: {
          '1': data.nomProjet,
          '2': data.coutProjet,
          '3': data.responsable,
          '4': data.observation,
          '5': data.signature, 
          '6': data.created, 
          '7': data.isSubmit,
          '8': data.approbationDG,
          '9': data.motifDG,
          '10': data.signatureDG,
          '11': data.approbationBudget,
          '12': data.motifBudget,
          '13': data.signatureBudget,
          '14': data.approbationFin,
          '15': data.motifFin,
          '16': data.signatureFin,
          '17': data.approbationDD,
          '18': data.motifDD,
          '19': data.signatureDD,
          '20': data.ligneBudgetaire,
          '21': data.ressource
        });
    });
  }

  Future<void> update(ProjetModel data) async {
   await executor.query("""UPDATE $tableName
      SET nom_projet = @1, cout_projet = @2, responsable = @3, observation = @4,
      signature = @5, created = @6, is_submit = @7,
      approbation_dg = @8, motif_dg = @9, signature_dg = @10, approbation_budget = @11,
      motif_budget = @12, signature_budget = @13, approbation_fin = @14, motif_fin = @15,
      signature_fin = @16, approbation_dd = @17, motif_dd = @18, signature_dd = @19,
      ligne_budgetaire = @20, ressource = @21 WHERE id = @22""", 
      substitutionValues: {
        '1': data.nomProjet,
        '2': data.coutProjet,
        '3': data.responsable,
        '4': data.observation,
        '5': data.signature,
        '6': data.created,
        '7': data.isSubmit,
        '8': data.approbationDG,
        '9': data.motifDG,
        '10': data.signatureDG,
        '11': data.approbationBudget,
        '12': data.motifBudget,
        '13': data.signatureBudget,
        '14': data.approbationFin,
        '15': data.motifFin,
        '16': data.signatureFin,
        '17': data.approbationDD,
        '18': data.motifDD,
        '19': data.signatureDD,
        '20': data.ligneBudgetaire,
        '21': data.ressource,
        '22': data.id
    });
  }

  deleteData(int id) async {
    try {
      await executor.transaction((conn) async {
        // ignore: unused_local_variable
        var result = await conn.execute('DELETE FROM $tableName WHERE id=$id;');
      });
    } catch (e) {
      'erreur $e';
    }
  }

  Future<ProjetModel> getFromId(int id) async {
    var data =
        await executor.query("SELECT * FROM  $tableName WHERE \"id\" = '$id'");
    return ProjetModel(
      id: data[0][0],
      nomProjet: data[0][1],
      coutProjet: data[0][2],
      responsable: data[0][3],
      observation: data[0][4],
      signature: data[0][5],
      created: data[0][6],
      isSubmit: data[0][7],
      approbationDG: data[0][8],
      motifDG: data[0][9],
      signatureDG: data[0][10],
      approbationBudget: data[0][11],
      motifBudget: data[0][12],
      signatureBudget: data[0][13],
      approbationFin: data[0][14],
      motifFin: data[0][15],
      signatureFin: data[0][16],
      approbationDD: data[0][17],
      motifDD: data[0][18],
      signatureDD: data[0][19],
      ligneBudgetaire: data[0][20],
      ressource: data[0][21]
    );
  }
}
